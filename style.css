* {
  outline: none;
}
.clearfix:before,
.clearfix:after {
  content: " ";
  display: table;
}
.clearfix:after {
  clear: both;
}
.clearfix {
  *zoom: 1;
}
html, body {
  margin: 0;
  padding: 0;
  height: 100%;
}
body {
  border-top: 8px #F29A6A solid;
}
img {
  max-width: 100%;
}
.hidden {
  opacity: 0;
  height: 0px;
  overflow: hidden;
  min-height: 0px;
  transition: opacity .25s ease-in-out;
  -moz-transition: opacity .25s ease-in-out;
  -webkit-transition: opacity .25s ease-in-out;
  transition: min-height .25s ease-in-out;
  -moz-transition: min-height .25s ease-in-out;
  -webkit-transition: min-height .25s ease-in-out;
}
.hidden.show {
  opacity: 1;
  min-height: 325px;
}
#app {
  height: 100%;
  color: #2f3849;
  font-family: 'Open Sans';
  font-weight: 400;
}
#side {
  background: #fef6e2;
}
#portrait {
  display: block;
}
.option {
  background: rgba(255,216,141,.1);
  color: #5F4044;
  font-size: 18px;
  padding: 10px 13px;
  border-radius: 5px;
  cursor: pointer;
  box-shadow: 0px 0px 12px -6px;
}
.option:hover {
  background: rgba(255,191,124,.25);
}
.option.selected {
  background: rgba(255,191,124,.8);
}
.option span {
  display: block;
  font-size: 12px;
}
#bow {
  position: absolute;
  top: 0px;
  z-index: 1;
  left: 0;
  max-width: none;
  left: 50%;
  margin-left: -340px;
}
#wrap {
  padding: 30px;
  background: rgba(255, 216, 141, .25) url(http://subtlepatterns.com/patterns/lightpaperfibers.png);
}
input[type=text], input[type=number], textarea {
  border: none;
  font-size: 18px;
  background: rgba(255, 216, 141, .2);
  border-radius: 2px;
  padding: 5px 10px;
  box-shadow: 0px 0px 12px -6px inset;
  color: #5F4044;
  box-sizing: border-box;
  width: 100%;
}
textarea {
  font-family: 'Open Sans';
  font-size: 14px;
}
input[type=number] {
  text-align: center;
}
input[type=checkbox].css-checkbox {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height:1px;
  width:1px;
  margin:-1px;
  padding:0;
  border:0;
}
input[type=checkbox].css-checkbox + label.css-label {
  padding-left:20px;
  height:15px;
  display:inline-block;
  line-height:18px;
  background-repeat:no-repeat;
  background-position: 0 0;
  font-size:18px;
  vertical-align:middle;
  cursor:pointer;
}
input[type=checkbox].css-checkbox:checked + label.css-label {
  background-position: 0 -15px;
}
.css-label{
  background-image:url(http://csscheckbox.com/checkboxes/lite-orange-check.png);
}
h1 span {
  color: #F29A6A;
  font-size: 36px;
  margin: 0;
  display: block;
  line-height: 1
}
h1 {
  font-family: 'Cinzel';
  font-size: 18px;
}
label {
  font-family: 'Cinzel';
  font-size: 13px;
  text-transform: lowercase;
}
.confirm {
  background: #C56357;
  color: white;
  text-transform: uppercase;
  font-size: 16px;
  padding: 10px 24px;
  border: none;
  cursor: pointer;
}
@media screen and (min-width: 650px) {
  body{
    margin-top: 0px;
    background: url(http://images.wisegeek.com/burlap-fabric.jpg);
  }
  #app {
    padding-top: 5%;
    max-width: 900px;
    margin: 0 auto;
    width: 90%;
  }
  #side {
    width: 38%;
    display: inline-block;
    max-width: 240px;
    float: left;
    font-size: 12px;
    /*background: url(http://subtlepatterns.com/patterns/lightpaperfibers.png);*/
    box-shadow: 10px 10px 10px -5px rgba(0,0,0,.6);
  }
  #portrait {
    margin: 0 auto;
  }
  #wrap {
    margin-left: 10%;
    margin-bottom: 5%;
    box-shadow: 10px 10px 10px -5px rgba(0,0,0,.6);
    padding-top: 80px;
    position: relative;
    overflow: hidden;
  }
  #main {
    height: 100%;
    overflow-x: hidden;
    background-attachment: fixed;
    position: relative;
    padding-right: 10px;
  }
  .hidden.show {
    min-height: 135px;
  }
}

/*
 * Gridism
 * A simple, responsive, and handy CSS grid by @cobyism
 * https://github.com/cobyism/gridism
 */
/* Preserve some sanity */
.grid,
.unit {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
/* Set up some rules to govern the grid */
.grid {
  display: block;
  clear: both;
}
.grid .unit {
  float: left;
  width: 100%;
  padding: 10px;
}
/* This ensures the outer gutters are equal to the (doubled) inner gutters. */
.grid .unit:first-child { padding-left: 20px; }
.grid .unit:last-child { padding-right: 20px; }
/* Nested grids already have padding though, so let’s nuke it */
.unit .unit:first-child { padding-left: 0; }
.unit .unit:last-child { padding-right: 0; }
.unit .grid:first-child > .unit { padding-top: 0; }
.unit .grid:last-child > .unit { padding-bottom: 0; }
/* Let people nuke the gutters/padding completely in a couple of ways */
.no-gutters .unit,
.unit.no-gutters {
  padding: 0 !important;
}
/* Wrapping at a maximum width is optional */
.wrap .grid,
.grid.wrap {
  max-width: 978px;
  margin: 0 auto;
}
/* Width classes also have shorthand versions numbered as fractions
 * For example: for a grid unit 1/3 (one third) of the parent width,
 * simply apply class="w-1-3" to the element. */
.grid .whole,          .grid .w-1-1 { width: 100%; }
.grid .half,           .grid .w-1-2 { width: 50%; }
.grid .one-third,      .grid .w-1-3 { width: 33.3332%; }
.grid .two-thirds,     .grid .w-2-3 { width: 66.6665%; }
.grid .one-quarter,
.grid .one-fourth,     .grid .w-1-4 { width: 25%; }
.grid .three-quarters,
.grid .three-fourths,  .grid .w-3-4 { width: 75%; }
.grid .one-fifth,      .grid .w-1-5 { width: 20%; }
.grid .two-fifths,     .grid .w-2-5 { width: 40%; }
.grid .three-fifths,   .grid .w-3-5 { width: 60%; }
.grid .four-fifths,    .grid .w-4-5 { width: 80%; }
.grid .golden-small,   .grid .w-g-s { width: 38.2716%; } /* Golden section: smaller piece */
.grid .golden-large,   .grid .w-g-l { width: 61.7283%; } /* Golden section: larger piece */
/* Clearfix after every .grid */
.grid {
  *zoom: 1;
}
.grid:before, .grid:after {
  display: table;
  content: "";
  line-height: 0;
}
.grid:after {
  clear: both;
}
/* Utility classes */
.align-center { text-align: center; }
.align-left   { text-align: left; }
.align-right  { text-align: right; }
.pull-left    { float: left; }
.pull-right   { float: right; }
/* A property for a better rendering of images in units: in
   this way bigger pictures are just resized if the unit
   becomes smaller */
.unit img {
  max-width: 100%;
}
/* Responsive Stuff */
@media screen and (max-width: 568px) {
  /* Stack anything that isn’t full-width on smaller screens 
     and doesn't provide the no-stacking-on-mobiles class */
  .grid:not(.no-stacking-on-mobiles) > .unit {
    width: 100% !important;
    padding-left: 20px;
    padding-right: 20px;
  }
  .unit .grid .unit {
    padding-left: 0px;
    padding-right: 0px;
  }

  /* Sometimes, you just want to be different on small screens */
  .center-on-mobiles {
    text-align: center !important;
  }
  .hide-on-mobiles {
    display: none !important;
  }
}
/* Expand the wrap a bit further on larger screens */
@media screen and (min-width: 1180px) {
  .wider .grid,
  .grid.wider {
    max-width: 1180px;
    margin: 0 auto;
  }
}